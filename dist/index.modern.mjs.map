{"version":3,"file":"index.modern.mjs","sources":["../node_modules/dotenv/lib/main.js","../src/index.ts"],"sourcesContent":["const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","import * as dotenv from 'dotenv'\ndotenv.config({ path: `.env.${process.env.NODE_ENV}` })\n\nimport fetch from 'axios'\n\ntype CallTrackingProps = {\n  token: string\n  fallback?: any\n  html: {\n    event: string\n    selector: string\n  }\n}\n\nclass CallTracking {\n  #token: any\n  #fallback: any\n  #html: any\n\n  constructor(props: CallTrackingProps) {\n    this.#token = props.token\n    this.#fallback = props.fallback\n    this.#html = props.html\n  }\n\n  googleClientId() {\n    let ga = document.cookie.split(';').find((o) => o.match(/_ga=(.+?)/))\n    if (!ga) return ''\n\n    return ga.split('.').slice(-2).join('.')\n  }\n\n  run() {\n    const url = `${process.env.CALL_TRACKING_URL}/2/${this.#token}`\n\n    const options = {\n      method: 'POST',\n      data: JSON.stringify({ cid: this.googleClientId() }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    let $el = document.querySelector(this.#html.selector)\n\n    if (!$el) {\n      console.info('[CallTracking] Campo HTML nÃ£o encontrado')\n      return this.#fallback.error\n    }\n\n    return fetch(url, options).then((response) => {\n      const { data } = response\n\n      // update HTML ELement\n      $el.textContent = data?.number || this.#fallback.error\n\n      return data?.number || this.#fallback.error\n    })\n  }\n}\n\nconst AtendeSimples = { CallTracking }\n\nexport default AtendeSimples\n"],"names":["LINE","_log","message","console","log","DotenvModule","config","options","dotenvPath","path","resolve","process","cwd","encoding","debug","Boolean","override","envPath","join","os","homedir","slice","parsed","parse","fs","readFileSync","Object","keys","forEach","key","prototype","hasOwnProperty","call","env","e","error","src","obj","match","lines","toString","replace","exec","value","trim","maybeQuote","config_1","parse_1","main","dotenv","NODE_ENV","_token","_classPrivateFieldLooseKey","_fallback","_html","AtendeSimples","CallTracking","constructor","props","defineProperty","writable","this","_classPrivateFieldLooseBase","token","fallback","html","googleClientId","ga","document","cookie","split","find","o","run","url","CALL_TRACKING_URL","method","data","JSON","stringify","cid","headers","$el","querySelector","selector","fetch","then","response","textContent","number","info"],"mappings":"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"}